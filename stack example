class Stack {
    private int[] array;
    private int top;
    private int capacity;

    // Конструктор
    public Stack(int size) {
        capacity = size;
        array = new int[capacity];
        top = -1;
    }

    // Проверка стека на пустоту
    public boolean isEmpty() {
        return top == -1;
    }

    // Проверка стека на заполненность
    public boolean isFull() {
        return top == capacity - 1;
    }

    // Добавление элемента в стек
    public void push(int item) {
        if (isFull()) {
            System.out.println("Стек переполнен");
        } else {
            array[++top] = item;
            System.out.println(item + " добавлен в стек");
        }
    }

    // Удаление элемента из стека
    public int pop() {
        if (isEmpty()) {
            System.out.println("Стек пуст");
            return -1;
        } else {
            int item = array[top--];
            return item;
        }
    }

    // Получение верхнего элемента стека
    public int peek() {
        if (isEmpty()) {
            System.out.println("Стек пуст");
            return -1;
        } else {
            return array[top];
        }
    }

    // Вывод содержимого стека
    public void printStack() {
        if (isEmpty()) {
            System.out.println("Стек пуст");
        } else {
            System.out.println("Содержимое стека:");
            for (int i = 0; i <= top; i++) {
                System.out.print(array[i] + " ");
            }
            System.out.println();
        }
    }
}

public class Main {
    public static void main(String[] args) {
        Stack stack = new Stack(5);

        stack.push(1);
        stack.push(2);
        stack.push(3);
        stack.printStack();

        System.out.println("Верхний элемент стека: " + stack.peek());

        stack.pop();
        stack.printStack();
    }
}
